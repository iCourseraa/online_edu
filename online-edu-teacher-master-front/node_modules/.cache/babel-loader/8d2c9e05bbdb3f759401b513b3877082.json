{"remainingRequest":"E:\\WeChat Files\\wxid_i602lxrox27v12\\FileStorage\\File\\2024-12\\online_edu (2)\\online-edu-teacher-master-front\\node_modules\\babel-loader\\lib\\index.js!E:\\WeChat Files\\wxid_i602lxrox27v12\\FileStorage\\File\\2024-12\\online_edu (2)\\online-edu-teacher-master-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\WeChat Files\\wxid_i602lxrox27v12\\FileStorage\\File\\2024-12\\online_edu (2)\\online-edu-teacher-master-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\WeChat Files\\wxid_i602lxrox27v12\\FileStorage\\File\\2024-12\\online_edu (2)\\online-edu-teacher-master-front\\src\\views\\dashboard\\daily.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\WeChat Files\\wxid_i602lxrox27v12\\FileStorage\\File\\2024-12\\online_edu (2)\\online-edu-teacher-master-front\\src\\views\\dashboard\\daily.vue","mtime":1734967563778},{"path":"E:\\WeChat Files\\wxid_i602lxrox27v12\\FileStorage\\File\\2024-12\\online_edu (2)\\online-edu-teacher-master-front\\babel.config.js","mtime":1734500744126},{"path":"E:\\WeChat Files\\wxid_i602lxrox27v12\\FileStorage\\File\\2024-12\\online_edu (2)\\online-edu-teacher-master-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1734683766888},{"path":"E:\\WeChat Files\\wxid_i602lxrox27v12\\FileStorage\\File\\2024-12\\online_edu (2)\\online-edu-teacher-master-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1734683771693},{"path":"E:\\WeChat Files\\wxid_i602lxrox27v12\\FileStorage\\File\\2024-12\\online_edu (2)\\online-edu-teacher-master-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1734683766888},{"path":"E:\\WeChat Files\\wxid_i602lxrox27v12\\FileStorage\\File\\2024-12\\online_edu (2)\\online-edu-teacher-master-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1734683773729}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["getDaily","jsonObj2FormData","name","props","startEnd","type","Array","default","now","Date","toLocaleDateString","getTime","start","parseTime","end","data","loading","chartType","chartData","columns","rows","series","chartSettings","labelMap","courseBuyCount","videoViewCount","area","extend","legend","left","grid","bottom","colorPalette","watch","val","getDailyStat","created","methods","_this","params","then","response","console","log","courses","_this$processCourseDa","processCourseData","viewData","buyData","concat","_toConsumableArray","catch","_this2","allDates","getAllDates","forEach","course","viewCourseData","buyCourseData","date","dailyStat","dailyStats","find","stat","push","courseTitle","mergeRows","color","length","dates","Set","add","sort","courseData","index","undefined","time","getFullYear","getMonth","toString","padStart","getDate","changeChartType"],"sources":["src/views/dashboard/daily.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 切换按钮 -->\n    <div>\n      <button :class=\"{ 'active': chartType === 'view' }\" @click=\"changeChartType('view')\">课程观看量</button>\n      <button :class=\"{ 'active': chartType === 'buy' }\" @click=\"changeChartType('buy')\">课程收藏量</button>\n    </div>\n    <!-- 图表组件 -->\n    <ve-line v-loading=\"loading\" :data=\"chartData\" :settings=\"chartSettings\" :extend=\"extend\" />\n  </div>\n</template>\n\n<script>\n// import { getCommon } from '@/api/stat'  // 假设这是你用来获取数据的 API 服务\nimport { getDaily } from '@/api/stat'\nimport { jsonObj2FormData } from '@/utils'\n\nexport default {\n  name: 'StatDaily',\n  props: {\n    startEnd: {\n      type: Array,\n      default: function () {\n        const now = new Date(new Date(new Date().toLocaleDateString()).getTime()).getTime()\n        const start = this.parseTime(now - 30 * 24 * 60 * 60 * 1000) // 默认过去30天\n        const end = this.parseTime(now)\n        return [start, end]\n      }\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      chartType: 'view',\n      chartData: {\n        columns: ['date'], // 先只设置日期列\n        rows: [],\n        series: [] // 新增系列数据\n      },\n      chartSettings: {\n        labelMap: {\n          courseBuyCount: '课程购买数量',\n          videoViewCount: '视频观看数量'\n        },\n        area: true // 设为true可以使图表为区域图（如果需要）\n      },\n      extend: {\n        legend: {\n          left: '12'\n        },\n        grid: {\n          bottom: '10'\n        }\n      },\n      colorPalette: ['#42b983', '#ff6a00'] // 定义颜色调色板\n      // colorPalette: ['#42b983', '#ff6a00', '#409eff', '#e03c31', '#9c27b0', '#2196f3'] // 定义颜色调色板\n    }\n  },\n  watch: {\n    startEnd(val) {\n      this.getDailyStat()\n    }\n  },\n  created() {\n    this.getDailyStat()\n  },\n  methods: {\n    // 获取课程统计数据的 API 请求\n    getDailyStat() {\n      this.loading = true\n      const params = jsonObj2FormData({\n        start: this.startEnd[0],\n        end: this.startEnd[1]\n      })\n\n      getDaily(params).then(response => {\n        console.log('API 返回的数据:', response.data)\n        const courses = response.data\n\n        // 根据图表类型设置数据\n        this.chartData.columns = ['date'] // 初始化日期列\n        this.chartData.rows = [] // 清空之前的数据\n        this.chartData.series = [] // 清空之前的系列数据\n\n        // 处理数据，生成观看量和订阅量数据\n        const { viewData, buyData } = this.processCourseData(courses)\n\n        // 设置最终的图表数据\n        if (this.chartType === 'view') {\n          this.chartData.columns = ['date', ...viewData.columns]\n          this.chartData.rows = viewData.rows\n          this.chartData.series = viewData.series\n        } else if (this.chartType === 'buy') {\n          this.chartData.columns = ['date', ...buyData.columns]\n          this.chartData.rows = buyData.rows\n          this.chartData.series = buyData.series\n        }\n\n        console.log('最终的 chartData:', this.chartData)\n        this.loading = false\n      }).catch(() => {\n        this.loading = false\n      })\n    },\n\n    // 处理课程数据，分别生成观看量和订阅量数据\n    processCourseData(courses) {\n      const viewData = {\n        columns: [],\n        rows: [],\n        series: []\n      }\n      const buyData = {\n        columns: [],\n        rows: [],\n        series: []\n      }\n\n      const allDates = this.getAllDates(courses)\n\n      // 遍历所有课程\n      courses.forEach(course => {\n        const viewCourseData = []\n        const buyCourseData = []\n\n        // 遍历该课程的每日数据\n        allDates.forEach(date => {\n          const dailyStat = course.dailyStats.find(stat => stat.date === date) || { videoViewCount: 0, courseBuyCount: 0 }\n\n          // 将每天的数据填充到观看量和订阅量表格\n          viewCourseData.push(dailyStat.videoViewCount)\n          buyCourseData.push(dailyStat.courseBuyCount)\n        })\n\n        // 为观看量表添加课程数据\n        viewData.columns.push(course.courseTitle)\n        viewData.rows = this.mergeRows(viewData.rows, allDates, viewCourseData, course.courseTitle)\n        viewData.series.push({\n          name: course.courseTitle,\n          data: viewCourseData,\n          color: this.colorPalette[viewData.series.length % this.colorPalette.length]\n        })\n\n        // 为订阅量表添加课程数据\n        buyData.columns.push(course.courseTitle)\n        buyData.rows = this.mergeRows(buyData.rows, allDates, buyCourseData, course.courseTitle)\n        buyData.series.push({\n          name: course.courseTitle,\n          data: buyCourseData,\n          color: this.colorPalette[buyData.series.length % this.colorPalette.length]\n        })\n      })\n\n      return { viewData, buyData }\n    },\n\n    // 获取所有日期（从所有课程的 dailyStats 中获取）\n    getAllDates(courses) {\n      const dates = new Set()\n      courses.forEach(course => {\n        course.dailyStats.forEach(stat => {\n          dates.add(stat.date)\n        })\n      })\n      return [...dates].sort() // 按日期排序\n    },\n\n    // 合并 rows 数据\n    mergeRows(rows, dates, courseData, courseTitle) {\n      dates.forEach((date, index) => {\n        if (rows[index] === undefined) {\n          rows[index] = { date }\n        }\n        rows[index][courseTitle] = courseData[index]\n      })\n      return rows\n    },\n\n    // 时间格式化方法\n    parseTime(time) {\n      const date = new Date(time)\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`\n    },\n\n    // 切换图表类型\n    changeChartType(type) {\n      this.chartType = type\n      this.getDailyStat() // 切换图表类型后重新获取数据\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* 按钮容器 */\nbutton {\n  margin-right: 10px;\n  padding: 8px 16px;\n  /* 增大按钮的大小，方便点击 */\n  cursor: pointer;\n  border: none;\n  /* 去掉默认的边框 */\n  border-radius: 4px;\n  /* 圆角 */\n  background-color: #f1f1f1;\n  /* 默认背景颜色 */\n  color: #97a8be;\n  /* 默认字体颜色 */\n  font-size: 14px;\n  /* 设置字体大小 */\n  font-weight: 500;\n  /* 设置字体加粗 */\n  transition: all 0.3s ease;\n  /* 平滑的过渡效果 */\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  /* 增加阴影效果，提升层次感 */\n}\n\n/* 活动按钮样式 */\nbutton.active {\n  background-color: #f8f7f7;\n  /* 激活时的背景颜色，淡蓝色 */\n  color: #4b9af0;\n  /* 激活时的字体颜色，深蓝色 */\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  /* 激活时按钮的阴影效果，蓝色阴影 */\n}\n\n/* 鼠标悬停时的效果 */\nbutton:hover {\n  background-color: #e0e0e0;\n  /* 鼠标悬停时的背景色 */\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  /* 悬停时的阴影效果 */\n}\n\n/* 按钮被禁用时的样式 */\nbutton:disabled {\n  background-color: #dcdcdc;\n  /* 禁用时的背景色 */\n  color: #b0b0b0;\n  /* 禁用时的字体颜色 */\n  cursor: not-allowed;\n  /* 禁用时的鼠标样式 */\n  box-shadow: none;\n  /* 禁用时去掉阴影 */\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}