{"remainingRequest":"E:\\WeChat Files\\wxid_i602lxrox27v12\\FileStorage\\File\\2024-12\\online_edu (2)\\online-edu-teacher-master-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\WeChat Files\\wxid_i602lxrox27v12\\FileStorage\\File\\2024-12\\online_edu (2)\\online-edu-teacher-master-front\\src\\views\\dashboard\\daily.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\WeChat Files\\wxid_i602lxrox27v12\\FileStorage\\File\\2024-12\\online_edu (2)\\online-edu-teacher-master-front\\src\\views\\dashboard\\daily.vue","mtime":1734967563778},{"path":"E:\\WeChat Files\\wxid_i602lxrox27v12\\FileStorage\\File\\2024-12\\online_edu (2)\\online-edu-teacher-master-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1734683766888},{"path":"E:\\WeChat Files\\wxid_i602lxrox27v12\\FileStorage\\File\\2024-12\\online_edu (2)\\online-edu-teacher-master-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1734683771693},{"path":"E:\\WeChat Files\\wxid_i602lxrox27v12\\FileStorage\\File\\2024-12\\online_edu (2)\\online-edu-teacher-master-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1734683766888},{"path":"E:\\WeChat Files\\wxid_i602lxrox27v12\\FileStorage\\File\\2024-12\\online_edu (2)\\online-edu-teacher-master-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1734683773729}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIGltcG9ydCB7IGdldENvbW1vbiB9IGZyb20gJ0AvYXBpL3N0YXQnICAvLyDlgYforr7ov5nmmK/kvaDnlKjmnaXojrflj5bmlbDmja7nmoQgQVBJIOacjeWKoQppbXBvcnQgeyBnZXREYWlseSB9IGZyb20gJ0AvYXBpL3N0YXQnCmltcG9ydCB7IGpzb25PYmoyRm9ybURhdGEgfSBmcm9tICdAL3V0aWxzJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTdGF0RGFpbHknLAogIHByb3BzOiB7CiAgICBzdGFydEVuZDogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gKCkgewogICAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKG5ldyBEYXRlKG5ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCkpLmdldFRpbWUoKSkuZ2V0VGltZSgpCiAgICAgICAgY29uc3Qgc3RhcnQgPSB0aGlzLnBhcnNlVGltZShub3cgLSAzMCAqIDI0ICogNjAgKiA2MCAqIDEwMDApIC8vIOm7mOiupOi/h+WOuzMw5aSpCiAgICAgICAgY29uc3QgZW5kID0gdGhpcy5wYXJzZVRpbWUobm93KQogICAgICAgIHJldHVybiBbc3RhcnQsIGVuZF0KICAgICAgfQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBjaGFydFR5cGU6ICd2aWV3JywKICAgICAgY2hhcnREYXRhOiB7CiAgICAgICAgY29sdW1uczogWydkYXRlJ10sIC8vIOWFiOWPquiuvue9ruaXpeacn+WIlwogICAgICAgIHJvd3M6IFtdLAogICAgICAgIHNlcmllczogW10gLy8g5paw5aKe57O75YiX5pWw5o2uCiAgICAgIH0sCiAgICAgIGNoYXJ0U2V0dGluZ3M6IHsKICAgICAgICBsYWJlbE1hcDogewogICAgICAgICAgY291cnNlQnV5Q291bnQ6ICfor77nqIvotK3kubDmlbDph48nLAogICAgICAgICAgdmlkZW9WaWV3Q291bnQ6ICfop4bpopHop4LnnIvmlbDph48nCiAgICAgICAgfSwKICAgICAgICBhcmVhOiB0cnVlIC8vIOiuvuS4unRydWXlj6/ku6Xkvb/lm77ooajkuLrljLrln5/lm77vvIjlpoLmnpzpnIDopoHvvIkKICAgICAgfSwKICAgICAgZXh0ZW5kOiB7CiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBsZWZ0OiAnMTInCiAgICAgICAgfSwKICAgICAgICBncmlkOiB7CiAgICAgICAgICBib3R0b206ICcxMCcKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGNvbG9yUGFsZXR0ZTogWycjNDJiOTgzJywgJyNmZjZhMDAnXSAvLyDlrprkuYnpopzoibLosIPoibLmnb8KICAgICAgLy8gY29sb3JQYWxldHRlOiBbJyM0MmI5ODMnLCAnI2ZmNmEwMCcsICcjNDA5ZWZmJywgJyNlMDNjMzEnLCAnIzljMjdiMCcsICcjMjE5NmYzJ10gLy8g5a6a5LmJ6aKc6Imy6LCD6Imy5p2/CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgc3RhcnRFbmQodmFsKSB7CiAgICAgIHRoaXMuZ2V0RGFpbHlTdGF0KCkKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldERhaWx5U3RhdCgpCiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDojrflj5bor77nqIvnu5/orqHmlbDmja7nmoQgQVBJIOivt+axggogICAgZ2V0RGFpbHlTdGF0KCkgewogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlCiAgICAgIGNvbnN0IHBhcmFtcyA9IGpzb25PYmoyRm9ybURhdGEoewogICAgICAgIHN0YXJ0OiB0aGlzLnN0YXJ0RW5kWzBdLAogICAgICAgIGVuZDogdGhpcy5zdGFydEVuZFsxXQogICAgICB9KQoKICAgICAgZ2V0RGFpbHkocGFyYW1zKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICBjb25zb2xlLmxvZygnQVBJIOi/lOWbnueahOaVsOaNrjonLCByZXNwb25zZS5kYXRhKQogICAgICAgIGNvbnN0IGNvdXJzZXMgPSByZXNwb25zZS5kYXRhCgogICAgICAgIC8vIOagueaNruWbvuihqOexu+Wei+iuvue9ruaVsOaNrgogICAgICAgIHRoaXMuY2hhcnREYXRhLmNvbHVtbnMgPSBbJ2RhdGUnXSAvLyDliJ3lp4vljJbml6XmnJ/liJcKICAgICAgICB0aGlzLmNoYXJ0RGF0YS5yb3dzID0gW10gLy8g5riF56m65LmL5YmN55qE5pWw5o2uCiAgICAgICAgdGhpcy5jaGFydERhdGEuc2VyaWVzID0gW10gLy8g5riF56m65LmL5YmN55qE57O75YiX5pWw5o2uCgogICAgICAgIC8vIOWkhOeQhuaVsOaNru+8jOeUn+aIkOingueci+mHj+WSjOiuoumYhemHj+aVsOaNrgogICAgICAgIGNvbnN0IHsgdmlld0RhdGEsIGJ1eURhdGEgfSA9IHRoaXMucHJvY2Vzc0NvdXJzZURhdGEoY291cnNlcykKCiAgICAgICAgLy8g6K6+572u5pyA57uI55qE5Zu+6KGo5pWw5o2uCiAgICAgICAgaWYgKHRoaXMuY2hhcnRUeXBlID09PSAndmlldycpIHsKICAgICAgICAgIHRoaXMuY2hhcnREYXRhLmNvbHVtbnMgPSBbJ2RhdGUnLCAuLi52aWV3RGF0YS5jb2x1bW5zXQogICAgICAgICAgdGhpcy5jaGFydERhdGEucm93cyA9IHZpZXdEYXRhLnJvd3MKICAgICAgICAgIHRoaXMuY2hhcnREYXRhLnNlcmllcyA9IHZpZXdEYXRhLnNlcmllcwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5jaGFydFR5cGUgPT09ICdidXknKSB7CiAgICAgICAgICB0aGlzLmNoYXJ0RGF0YS5jb2x1bW5zID0gWydkYXRlJywgLi4uYnV5RGF0YS5jb2x1bW5zXQogICAgICAgICAgdGhpcy5jaGFydERhdGEucm93cyA9IGJ1eURhdGEucm93cwogICAgICAgICAgdGhpcy5jaGFydERhdGEuc2VyaWVzID0gYnV5RGF0YS5zZXJpZXMKICAgICAgICB9CgogICAgICAgIGNvbnNvbGUubG9nKCfmnIDnu4jnmoQgY2hhcnREYXRhOicsIHRoaXMuY2hhcnREYXRhKQogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlCiAgICAgIH0pLmNhdGNoKCgpID0+IHsKICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQogICAgICB9KQogICAgfSwKCiAgICAvLyDlpITnkIbor77nqIvmlbDmja7vvIzliIbliKvnlJ/miJDop4LnnIvph4/lkozorqLpmIXph4/mlbDmja4KICAgIHByb2Nlc3NDb3Vyc2VEYXRhKGNvdXJzZXMpIHsKICAgICAgY29uc3Qgdmlld0RhdGEgPSB7CiAgICAgICAgY29sdW1uczogW10sCiAgICAgICAgcm93czogW10sCiAgICAgICAgc2VyaWVzOiBbXQogICAgICB9CiAgICAgIGNvbnN0IGJ1eURhdGEgPSB7CiAgICAgICAgY29sdW1uczogW10sCiAgICAgICAgcm93czogW10sCiAgICAgICAgc2VyaWVzOiBbXQogICAgICB9CgogICAgICBjb25zdCBhbGxEYXRlcyA9IHRoaXMuZ2V0QWxsRGF0ZXMoY291cnNlcykKCiAgICAgIC8vIOmBjeWOhuaJgOacieivvueoiwogICAgICBjb3Vyc2VzLmZvckVhY2goY291cnNlID0+IHsKICAgICAgICBjb25zdCB2aWV3Q291cnNlRGF0YSA9IFtdCiAgICAgICAgY29uc3QgYnV5Q291cnNlRGF0YSA9IFtdCgogICAgICAgIC8vIOmBjeWOhuivpeivvueoi+eahOavj+aXpeaVsOaNrgogICAgICAgIGFsbERhdGVzLmZvckVhY2goZGF0ZSA9PiB7CiAgICAgICAgICBjb25zdCBkYWlseVN0YXQgPSBjb3Vyc2UuZGFpbHlTdGF0cy5maW5kKHN0YXQgPT4gc3RhdC5kYXRlID09PSBkYXRlKSB8fCB7IHZpZGVvVmlld0NvdW50OiAwLCBjb3Vyc2VCdXlDb3VudDogMCB9CgogICAgICAgICAgLy8g5bCG5q+P5aSp55qE5pWw5o2u5aGr5YWF5Yiw6KeC55yL6YeP5ZKM6K6i6ZiF6YeP6KGo5qC8CiAgICAgICAgICB2aWV3Q291cnNlRGF0YS5wdXNoKGRhaWx5U3RhdC52aWRlb1ZpZXdDb3VudCkKICAgICAgICAgIGJ1eUNvdXJzZURhdGEucHVzaChkYWlseVN0YXQuY291cnNlQnV5Q291bnQpCiAgICAgICAgfSkKCiAgICAgICAgLy8g5Li66KeC55yL6YeP6KGo5re75Yqg6K++56iL5pWw5o2uCiAgICAgICAgdmlld0RhdGEuY29sdW1ucy5wdXNoKGNvdXJzZS5jb3Vyc2VUaXRsZSkKICAgICAgICB2aWV3RGF0YS5yb3dzID0gdGhpcy5tZXJnZVJvd3Modmlld0RhdGEucm93cywgYWxsRGF0ZXMsIHZpZXdDb3Vyc2VEYXRhLCBjb3Vyc2UuY291cnNlVGl0bGUpCiAgICAgICAgdmlld0RhdGEuc2VyaWVzLnB1c2goewogICAgICAgICAgbmFtZTogY291cnNlLmNvdXJzZVRpdGxlLAogICAgICAgICAgZGF0YTogdmlld0NvdXJzZURhdGEsCiAgICAgICAgICBjb2xvcjogdGhpcy5jb2xvclBhbGV0dGVbdmlld0RhdGEuc2VyaWVzLmxlbmd0aCAlIHRoaXMuY29sb3JQYWxldHRlLmxlbmd0aF0KICAgICAgICB9KQoKICAgICAgICAvLyDkuLrorqLpmIXph4/ooajmt7vliqDor77nqIvmlbDmja4KICAgICAgICBidXlEYXRhLmNvbHVtbnMucHVzaChjb3Vyc2UuY291cnNlVGl0bGUpCiAgICAgICAgYnV5RGF0YS5yb3dzID0gdGhpcy5tZXJnZVJvd3MoYnV5RGF0YS5yb3dzLCBhbGxEYXRlcywgYnV5Q291cnNlRGF0YSwgY291cnNlLmNvdXJzZVRpdGxlKQogICAgICAgIGJ1eURhdGEuc2VyaWVzLnB1c2goewogICAgICAgICAgbmFtZTogY291cnNlLmNvdXJzZVRpdGxlLAogICAgICAgICAgZGF0YTogYnV5Q291cnNlRGF0YSwKICAgICAgICAgIGNvbG9yOiB0aGlzLmNvbG9yUGFsZXR0ZVtidXlEYXRhLnNlcmllcy5sZW5ndGggJSB0aGlzLmNvbG9yUGFsZXR0ZS5sZW5ndGhdCiAgICAgICAgfSkKICAgICAgfSkKCiAgICAgIHJldHVybiB7IHZpZXdEYXRhLCBidXlEYXRhIH0KICAgIH0sCgogICAgLy8g6I635Y+W5omA5pyJ5pel5pyf77yI5LuO5omA5pyJ6K++56iL55qEIGRhaWx5U3RhdHMg5Lit6I635Y+W77yJCiAgICBnZXRBbGxEYXRlcyhjb3Vyc2VzKSB7CiAgICAgIGNvbnN0IGRhdGVzID0gbmV3IFNldCgpCiAgICAgIGNvdXJzZXMuZm9yRWFjaChjb3Vyc2UgPT4gewogICAgICAgIGNvdXJzZS5kYWlseVN0YXRzLmZvckVhY2goc3RhdCA9PiB7CiAgICAgICAgICBkYXRlcy5hZGQoc3RhdC5kYXRlKQogICAgICAgIH0pCiAgICAgIH0pCiAgICAgIHJldHVybiBbLi4uZGF0ZXNdLnNvcnQoKSAvLyDmjInml6XmnJ/mjpLluo8KICAgIH0sCgogICAgLy8g5ZCI5bm2IHJvd3Mg5pWw5o2uCiAgICBtZXJnZVJvd3Mocm93cywgZGF0ZXMsIGNvdXJzZURhdGEsIGNvdXJzZVRpdGxlKSB7CiAgICAgIGRhdGVzLmZvckVhY2goKGRhdGUsIGluZGV4KSA9PiB7CiAgICAgICAgaWYgKHJvd3NbaW5kZXhdID09PSB1bmRlZmluZWQpIHsKICAgICAgICAgIHJvd3NbaW5kZXhdID0geyBkYXRlIH0KICAgICAgICB9CiAgICAgICAgcm93c1tpbmRleF1bY291cnNlVGl0bGVdID0gY291cnNlRGF0YVtpbmRleF0KICAgICAgfSkKICAgICAgcmV0dXJuIHJvd3MKICAgIH0sCgogICAgLy8g5pe26Ze05qC85byP5YyW5pa55rOVCiAgICBwYXJzZVRpbWUodGltZSkgewogICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUodGltZSkKICAgICAgcmV0dXJuIGAke2RhdGUuZ2V0RnVsbFllYXIoKX0tJHsoZGF0ZS5nZXRNb250aCgpICsgMSkudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfS0ke2RhdGUuZ2V0RGF0ZSgpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX1gCiAgICB9LAoKICAgIC8vIOWIh+aNouWbvuihqOexu+WeiwogICAgY2hhbmdlQ2hhcnRUeXBlKHR5cGUpIHsKICAgICAgdGhpcy5jaGFydFR5cGUgPSB0eXBlCiAgICAgIHRoaXMuZ2V0RGFpbHlTdGF0KCkgLy8g5YiH5o2i5Zu+6KGo57G75Z6L5ZCO6YeN5paw6I635Y+W5pWw5o2uCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["daily.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAafile":"daily.vue","sourceRoot":"src/views/dashboard","sourcesContent":["<template>\n  <div>\n    <!-- 切换按钮 -->\n    <div>\n      <button :class=\"{ 'active': chartType === 'view' }\" @click=\"changeChartType('view')\">课程观看量</button>\n      <button :class=\"{ 'active': chartType === 'buy' }\" @click=\"changeChartType('buy')\">课程收藏量</button>\n    </div>\n    <!-- 图表组件 -->\n    <ve-line v-loading=\"loading\" :data=\"chartData\" :settings=\"chartSettings\" :extend=\"extend\" />\n  </div>\n</template>\n\n<script>\n// import { getCommon } from '@/api/stat'  // 假设这是你用来获取数据的 API 服务\nimport { getDaily } from '@/api/stat'\nimport { jsonObj2FormData } from '@/utils'\n\nexport default {\n  name: 'StatDaily',\n  props: {\n    startEnd: {\n      type: Array,\n      default: function () {\n        const now = new Date(new Date(new Date().toLocaleDateString()).getTime()).getTime()\n        const start = this.parseTime(now - 30 * 24 * 60 * 60 * 1000) // 默认过去30天\n        const end = this.parseTime(now)\n        return [start, end]\n      }\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      chartType: 'view',\n      chartData: {\n        columns: ['date'], // 先只设置日期列\n        rows: [],\n        series: [] // 新增系列数据\n      },\n      chartSettings: {\n        labelMap: {\n          courseBuyCount: '课程购买数量',\n          videoViewCount: '视频观看数量'\n        },\n        area: true // 设为true可以使图表为区域图（如果需要）\n      },\n      extend: {\n        legend: {\n          left: '12'\n        },\n        grid: {\n          bottom: '10'\n        }\n      },\n      colorPalette: ['#42b983', '#ff6a00'] // 定义颜色调色板\n      // colorPalette: ['#42b983', '#ff6a00', '#409eff', '#e03c31', '#9c27b0', '#2196f3'] // 定义颜色调色板\n    }\n  },\n  watch: {\n    startEnd(val) {\n      this.getDailyStat()\n    }\n  },\n  created() {\n    this.getDailyStat()\n  },\n  methods: {\n    // 获取课程统计数据的 API 请求\n    getDailyStat() {\n      this.loading = true\n      const params = jsonObj2FormData({\n        start: this.startEnd[0],\n        end: this.startEnd[1]\n      })\n\n      getDaily(params).then(response => {\n        console.log('API 返回的数据:', response.data)\n        const courses = response.data\n\n        // 根据图表类型设置数据\n        this.chartData.columns = ['date'] // 初始化日期列\n        this.chartData.rows = [] // 清空之前的数据\n        this.chartData.series = [] // 清空之前的系列数据\n\n        // 处理数据，生成观看量和订阅量数据\n        const { viewData, buyData } = this.processCourseData(courses)\n\n        // 设置最终的图表数据\n        if (this.chartType === 'view') {\n          this.chartData.columns = ['date', ...viewData.columns]\n          this.chartData.rows = viewData.rows\n          this.chartData.series = viewData.series\n        } else if (this.chartType === 'buy') {\n          this.chartData.columns = ['date', ...buyData.columns]\n          this.chartData.rows = buyData.rows\n          this.chartData.series = buyData.series\n        }\n\n        console.log('最终的 chartData:', this.chartData)\n        this.loading = false\n      }).catch(() => {\n        this.loading = false\n      })\n    },\n\n    // 处理课程数据，分别生成观看量和订阅量数据\n    processCourseData(courses) {\n      const viewData = {\n        columns: [],\n        rows: [],\n        series: []\n      }\n      const buyData = {\n        columns: [],\n        rows: [],\n        series: []\n      }\n\n      const allDates = this.getAllDates(courses)\n\n      // 遍历所有课程\n      courses.forEach(course => {\n        const viewCourseData = []\n        const buyCourseData = []\n\n        // 遍历该课程的每日数据\n        allDates.forEach(date => {\n          const dailyStat = course.dailyStats.find(stat => stat.date === date) || { videoViewCount: 0, courseBuyCount: 0 }\n\n          // 将每天的数据填充到观看量和订阅量表格\n          viewCourseData.push(dailyStat.videoViewCount)\n          buyCourseData.push(dailyStat.courseBuyCount)\n        })\n\n        // 为观看量表添加课程数据\n        viewData.columns.push(course.courseTitle)\n        viewData.rows = this.mergeRows(viewData.rows, allDates, viewCourseData, course.courseTitle)\n        viewData.series.push({\n          name: course.courseTitle,\n          data: viewCourseData,\n          color: this.colorPalette[viewData.series.length % this.colorPalette.length]\n        })\n\n        // 为订阅量表添加课程数据\n        buyData.columns.push(course.courseTitle)\n        buyData.rows = this.mergeRows(buyData.rows, allDates, buyCourseData, course.courseTitle)\n        buyData.series.push({\n          name: course.courseTitle,\n          data: buyCourseData,\n          color: this.colorPalette[buyData.series.length % this.colorPalette.length]\n        })\n      })\n\n      return { viewData, buyData }\n    },\n\n    // 获取所有日期（从所有课程的 dailyStats 中获取）\n    getAllDates(courses) {\n      const dates = new Set()\n      courses.forEach(course => {\n        course.dailyStats.forEach(stat => {\n          dates.add(stat.date)\n        })\n      })\n      return [...dates].sort() // 按日期排序\n    },\n\n    // 合并 rows 数据\n    mergeRows(rows, dates, courseData, courseTitle) {\n      dates.forEach((date, index) => {\n        if (rows[index] === undefined) {\n          rows[index] = { date }\n        }\n        rows[index][courseTitle] = courseData[index]\n      })\n      return rows\n    },\n\n    // 时间格式化方法\n    parseTime(time) {\n      const date = new Date(time)\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`\n    },\n\n    // 切换图表类型\n    changeChartType(type) {\n      this.chartType = type\n      this.getDailyStat() // 切换图表类型后重新获取数据\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* 按钮容器 */\nbutton {\n  margin-right: 10px;\n  padding: 8px 16px;\n  /* 增大按钮的大小，方便点击 */\n  cursor: pointer;\n  border: none;\n  /* 去掉默认的边框 */\n  border-radius: 4px;\n  /* 圆角 */\n  background-color: #f1f1f1;\n  /* 默认背景颜色 */\n  color: #97a8be;\n  /* 默认字体颜色 */\n  font-size: 14px;\n  /* 设置字体大小 */\n  font-weight: 500;\n  /* 设置字体加粗 */\n  transition: all 0.3s ease;\n  /* 平滑的过渡效果 */\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  /* 增加阴影效果，提升层次感 */\n}\n\n/* 活动按钮样式 */\nbutton.active {\n  background-color: #f8f7f7;\n  /* 激活时的背景颜色，淡蓝色 */\n  color: #4b9af0;\n  /* 激活时的字体颜色，深蓝色 */\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  /* 激活时按钮的阴影效果，蓝色阴影 */\n}\n\n/* 鼠标悬停时的效果 */\nbutton:hover {\n  background-color: #e0e0e0;\n  /* 鼠标悬停时的背景色 */\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  /* 悬停时的阴影效果 */\n}\n\n/* 按钮被禁用时的样式 */\nbutton:disabled {\n  background-color: #dcdcdc;\n  /* 禁用时的背景色 */\n  color: #b0b0b0;\n  /* 禁用时的字体颜色 */\n  cursor: not-allowed;\n  /* 禁用时的鼠标样式 */\n  box-shadow: none;\n  /* 禁用时去掉阴影 */\n}\n</style>\n"]}]}