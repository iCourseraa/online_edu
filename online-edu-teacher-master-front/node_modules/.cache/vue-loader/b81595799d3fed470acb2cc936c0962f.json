{"remainingRequest":"C:\\Users\\86193\\Desktop\\online_edu_V1224\\online-edu-teacher-master-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86193\\Desktop\\online_edu_V1224\\online-edu-teacher-master-front\\src\\views\\dashboard\\daily.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\86193\\Desktop\\online_edu_V1224\\online-edu-teacher-master-front\\src\\views\\dashboard\\daily.vue","mtime":1735378146183},{"path":"C:\\Users\\86193\\Desktop\\online_edu_V1224\\online-edu-teacher-master-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1734683766888},{"path":"C:\\Users\\86193\\Desktop\\online_edu_V1224\\online-edu-teacher-master-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1734683771693},{"path":"C:\\Users\\86193\\Desktop\\online_edu_V1224\\online-edu-teacher-master-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1734683766888},{"path":"C:\\Users\\86193\\Desktop\\online_edu_V1224\\online-edu-teacher-master-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1734683773729}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIGltcG9ydCB7IGdldENvbW1vbiB9IGZyb20gJ0AvYXBpL3N0YXQnICAvLyDlgYforr7ov5nmmK/kvaDnlKjmnaXojrflj5bmlbDmja7nmoQgQVBJIOacjeWKoQppbXBvcnQgeyBnZXREYWlseSB9IGZyb20gJ0AvYXBpL3N0YXQnCmltcG9ydCB7IGpzb25PYmoyRm9ybURhdGEgfSBmcm9tICdAL3V0aWxzJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTdGF0RGFpbHknLAogIHByb3BzOiB7CiAgICBzdGFydEVuZDogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gKCkgewogICAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKG5ldyBEYXRlKG5ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCkpLmdldFRpbWUoKSkuZ2V0VGltZSgpCiAgICAgICAgY29uc3Qgc3RhcnQgPSB0aGlzLnBhcnNlVGltZShub3cgLSAzMCAqIDI0ICogNjAgKiA2MCAqIDEwMDApIC8vIOm7mOiupOi/h+WOuzMw5aSpCiAgICAgICAgY29uc3QgZW5kID0gdGhpcy5wYXJzZVRpbWUobm93KQogICAgICAgIHJldHVybiBbc3RhcnQsIGVuZF0KICAgICAgfQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBjaGFydFR5cGU6ICd2aWV3JywKICAgICAgY2hhcnREYXRhOiB7CiAgICAgICAgY29sdW1uczogWydkYXRlJ10sIC8vIOWFiOWPquiuvue9ruaXpeacn+WIlwogICAgICAgIHJvd3M6IFtdLAogICAgICAgIHNlcmllczogW10gLy8g5paw5aKe57O75YiX5pWw5o2uCiAgICAgIH0sCiAgICAgIGNoYXJ0U2V0dGluZ3M6IHsKICAgICAgICBsYWJlbE1hcDogewogICAgICAgICAgY291cnNlQnV5Q291bnQ6ICfor77nqIvotK3kubDmlbDph48nLAogICAgICAgICAgdmlkZW9WaWV3Q291bnQ6ICfop4bpopHop4LnnIvmlbDph48nCiAgICAgICAgfSwKICAgICAgICBhcmVhOiB0cnVlIC8vIOiuvuS4unRydWXlj6/ku6Xkvb/lm77ooajkuLrljLrln5/lm77vvIjlpoLmnpzpnIDopoHvvIkKICAgICAgfSwKICAgICAgZXh0ZW5kOiB7CiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBsZWZ0OiAnMTInCiAgICAgICAgfSwKICAgICAgICBncmlkOiB7CiAgICAgICAgICBib3R0b206ICcxMCcKICAgICAgICB9LAogICAgICAgIHhBeGlzOiB7CiAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgICAgICAgLy8g5Y+q5L+d55WZ5pel5pyf6YOo5YiGCiAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlLnNwbGl0KCcgJylbMF0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgY29sb3JQYWxldHRlOiBbJyM0MmI5ODMnLCAnI2ZmNmEwMCddIC8vIOWumuS5ieminOiJsuiwg+iJsuadvwogICAgICAvLyBjb2xvclBhbGV0dGU6IFsnIzQyYjk4MycsICcjZmY2YTAwJywgJyM0MDllZmYnLCAnI2UwM2MzMScsICcjOWMyN2IwJywgJyMyMTk2ZjMnXSAvLyDlrprkuYnpopzoibLosIPoibLmnb8KICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBzdGFydEVuZCh2YWwpIHsKICAgICAgdGhpcy5nZXREYWlseVN0YXQoKQogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0RGFpbHlTdGF0KCkKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOiOt+WPluivvueoi+e7n+iuoeaVsOaNrueahCBBUEkg6K+35rGCCiAgICBnZXREYWlseVN0YXQoKSB7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWUKICAgICAgY29uc3QgcGFyYW1zID0ganNvbk9iajJGb3JtRGF0YSh7CiAgICAgICAgc3RhcnQ6IHRoaXMuc3RhcnRFbmRbMF0sCiAgICAgICAgZW5kOiB0aGlzLnN0YXJ0RW5kWzFdCiAgICAgIH0pCgogICAgICBnZXREYWlseShwYXJhbXMpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIGNvbnNvbGUubG9nKCdBUEkg6L+U5Zue55qE5pWw5o2uOicsIHJlc3BvbnNlLmRhdGEpCiAgICAgICAgY29uc3QgY291cnNlcyA9IHJlc3BvbnNlLmRhdGEKCiAgICAgICAgLy8g5qC55o2u5Zu+6KGo57G75Z6L6K6+572u5pWw5o2uCiAgICAgICAgdGhpcy5jaGFydERhdGEuY29sdW1ucyA9IFsnZGF0ZSddIC8vIOWIneWni+WMluaXpeacn+WIlwogICAgICAgIHRoaXMuY2hhcnREYXRhLnJvd3MgPSBbXSAvLyDmuIXnqbrkuYvliY3nmoTmlbDmja4KICAgICAgICB0aGlzLmNoYXJ0RGF0YS5zZXJpZXMgPSBbXSAvLyDmuIXnqbrkuYvliY3nmoTns7vliJfmlbDmja4KCiAgICAgICAgLy8g5aSE55CG5pWw5o2u77yM55Sf5oiQ6KeC55yL6YeP5ZKM6K6i6ZiF6YeP5pWw5o2uCiAgICAgICAgY29uc3QgeyB2aWV3RGF0YSwgYnV5RGF0YSB9ID0gdGhpcy5wcm9jZXNzQ291cnNlRGF0YShjb3Vyc2VzKQoKICAgICAgICAvLyDorr7nva7mnIDnu4jnmoTlm77ooajmlbDmja4KICAgICAgICBpZiAodGhpcy5jaGFydFR5cGUgPT09ICd2aWV3JykgewogICAgICAgICAgdGhpcy5jaGFydERhdGEuY29sdW1ucyA9IFsnZGF0ZScsIC4uLnZpZXdEYXRhLmNvbHVtbnNdCiAgICAgICAgICB0aGlzLmNoYXJ0RGF0YS5yb3dzID0gdmlld0RhdGEucm93cwogICAgICAgICAgdGhpcy5jaGFydERhdGEuc2VyaWVzID0gdmlld0RhdGEuc2VyaWVzCiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmNoYXJ0VHlwZSA9PT0gJ2J1eScpIHsKICAgICAgICAgIHRoaXMuY2hhcnREYXRhLmNvbHVtbnMgPSBbJ2RhdGUnLCAuLi5idXlEYXRhLmNvbHVtbnNdCiAgICAgICAgICB0aGlzLmNoYXJ0RGF0YS5yb3dzID0gYnV5RGF0YS5yb3dzCiAgICAgICAgICB0aGlzLmNoYXJ0RGF0YS5zZXJpZXMgPSBidXlEYXRhLnNlcmllcwogICAgICAgIH0KCiAgICAgICAgY29uc29sZS5sb2coJ+acgOe7iOeahCBjaGFydERhdGE6JywgdGhpcy5jaGFydERhdGEpCiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UKICAgICAgfSkuY2F0Y2goKCkgPT4gewogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlCiAgICAgIH0pCiAgICB9LAoKICAgIC8vIOWkhOeQhuivvueoi+aVsOaNru+8jOWIhuWIq+eUn+aIkOingueci+mHj+WSjOiuoumYhemHj+aVsOaNrgogICAgcHJvY2Vzc0NvdXJzZURhdGEoY291cnNlcykgewogICAgICBjb25zdCB2aWV3RGF0YSA9IHsKICAgICAgICBjb2x1bW5zOiBbXSwKICAgICAgICByb3dzOiBbXSwKICAgICAgICBzZXJpZXM6IFtdCiAgICAgIH0KICAgICAgY29uc3QgYnV5RGF0YSA9IHsKICAgICAgICBjb2x1bW5zOiBbXSwKICAgICAgICByb3dzOiBbXSwKICAgICAgICBzZXJpZXM6IFtdCiAgICAgIH0KCiAgICAgIGNvbnN0IGFsbERhdGVzID0gdGhpcy5nZXRBbGxEYXRlcyhjb3Vyc2VzKQoKICAgICAgLy8g6YGN5Y6G5omA5pyJ6K++56iLCiAgICAgIGNvdXJzZXMuZm9yRWFjaChjb3Vyc2UgPT4gewogICAgICAgIGNvbnN0IHZpZXdDb3Vyc2VEYXRhID0gW10KICAgICAgICBjb25zdCBidXlDb3Vyc2VEYXRhID0gW10KCiAgICAgICAgLy8g6YGN5Y6G6K+l6K++56iL55qE5q+P5pel5pWw5o2uCiAgICAgICAgYWxsRGF0ZXMuZm9yRWFjaChkYXRlID0+IHsKICAgICAgICAgIGNvbnN0IGRhaWx5U3RhdCA9IGNvdXJzZS5kYWlseVN0YXRzLmZpbmQoc3RhdCA9PiBzdGF0LmRhdGUgPT09IGRhdGUpIHx8IHsgdmlkZW9WaWV3Q291bnQ6IDAsIGNvdXJzZUJ1eUNvdW50OiAwIH0KCiAgICAgICAgICAvLyDlsIbmr4/lpKnnmoTmlbDmja7loavlhYXliLDop4LnnIvph4/lkozorqLpmIXph4/ooajmoLwKICAgICAgICAgIHZpZXdDb3Vyc2VEYXRhLnB1c2goZGFpbHlTdGF0LnZpZGVvVmlld0NvdW50KQogICAgICAgICAgYnV5Q291cnNlRGF0YS5wdXNoKGRhaWx5U3RhdC5jb3Vyc2VCdXlDb3VudCkKICAgICAgICB9KQoKICAgICAgICAvLyDkuLrop4LnnIvph4/ooajmt7vliqDor77nqIvmlbDmja4KICAgICAgICB2aWV3RGF0YS5jb2x1bW5zLnB1c2goY291cnNlLmNvdXJzZVRpdGxlKQogICAgICAgIHZpZXdEYXRhLnJvd3MgPSB0aGlzLm1lcmdlUm93cyh2aWV3RGF0YS5yb3dzLCBhbGxEYXRlcywgdmlld0NvdXJzZURhdGEsIGNvdXJzZS5jb3Vyc2VUaXRsZSkKICAgICAgICB2aWV3RGF0YS5zZXJpZXMucHVzaCh7CiAgICAgICAgICBuYW1lOiBjb3Vyc2UuY291cnNlVGl0bGUsCiAgICAgICAgICBkYXRhOiB2aWV3Q291cnNlRGF0YSwKICAgICAgICAgIGNvbG9yOiB0aGlzLmNvbG9yUGFsZXR0ZVt2aWV3RGF0YS5zZXJpZXMubGVuZ3RoICUgdGhpcy5jb2xvclBhbGV0dGUubGVuZ3RoXQogICAgICAgIH0pCgogICAgICAgIC8vIOS4uuiuoumYhemHj+ihqOa3u+WKoOivvueoi+aVsOaNrgogICAgICAgIGJ1eURhdGEuY29sdW1ucy5wdXNoKGNvdXJzZS5jb3Vyc2VUaXRsZSkKICAgICAgICBidXlEYXRhLnJvd3MgPSB0aGlzLm1lcmdlUm93cyhidXlEYXRhLnJvd3MsIGFsbERhdGVzLCBidXlDb3Vyc2VEYXRhLCBjb3Vyc2UuY291cnNlVGl0bGUpCiAgICAgICAgYnV5RGF0YS5zZXJpZXMucHVzaCh7CiAgICAgICAgICBuYW1lOiBjb3Vyc2UuY291cnNlVGl0bGUsCiAgICAgICAgICBkYXRhOiBidXlDb3Vyc2VEYXRhLAogICAgICAgICAgY29sb3I6IHRoaXMuY29sb3JQYWxldHRlW2J1eURhdGEuc2VyaWVzLmxlbmd0aCAlIHRoaXMuY29sb3JQYWxldHRlLmxlbmd0aF0KICAgICAgICB9KQogICAgICB9KQoKICAgICAgcmV0dXJuIHsgdmlld0RhdGEsIGJ1eURhdGEgfQogICAgfSwKCiAgICAvLyDojrflj5bmiYDmnInml6XmnJ/vvIjku47miYDmnInor77nqIvnmoQgZGFpbHlTdGF0cyDkuK3ojrflj5bvvIkKICAgIGdldEFsbERhdGVzKGNvdXJzZXMpIHsKICAgICAgY29uc3QgZGF0ZXMgPSBuZXcgU2V0KCkKICAgICAgY291cnNlcy5mb3JFYWNoKGNvdXJzZSA9PiB7CiAgICAgICAgY291cnNlLmRhaWx5U3RhdHMuZm9yRWFjaChzdGF0ID0+IHsKICAgICAgICAgIGRhdGVzLmFkZChzdGF0LmRhdGUpCiAgICAgICAgfSkKICAgICAgfSkKICAgICAgcmV0dXJuIFsuLi5kYXRlc10uc29ydCgpIC8vIOaMieaXpeacn+aOkuW6jwogICAgfSwKCiAgICAvLyDlkIjlubYgcm93cyDmlbDmja4KICAgIG1lcmdlUm93cyhyb3dzLCBkYXRlcywgY291cnNlRGF0YSwgY291cnNlVGl0bGUpIHsKICAgICAgZGF0ZXMuZm9yRWFjaCgoZGF0ZSwgaW5kZXgpID0+IHsKICAgICAgICBpZiAocm93c1tpbmRleF0gPT09IHVuZGVmaW5lZCkgewogICAgICAgICAgcm93c1tpbmRleF0gPSB7IGRhdGUgfQogICAgICAgIH0KICAgICAgICByb3dzW2luZGV4XVtjb3Vyc2VUaXRsZV0gPSBjb3Vyc2VEYXRhW2luZGV4XQogICAgICB9KQogICAgICByZXR1cm4gcm93cwogICAgfSwKCiAgICAvLyDml7bpl7TmoLzlvI/ljJbmlrnms5UKICAgIHBhcnNlVGltZSh0aW1lKSB7CiAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSh0aW1lKQogICAgICByZXR1cm4gYCR7ZGF0ZS5nZXRGdWxsWWVhcigpfS0keyhkYXRlLmdldE1vbnRoKCkgKyAxKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyl9LSR7ZGF0ZS5nZXREYXRlKCkudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfWAKICAgIH0sCgogICAgLy8g5YiH5o2i5Zu+6KGo57G75Z6LCiAgICBjaGFuZ2VDaGFydFR5cGUodHlwZSkgewogICAgICB0aGlzLmNoYXJ0VHlwZSA9IHR5cGUKICAgICAgdGhpcy5nZXREYWlseVN0YXQoKSAvLyDliIfmjaLlm77ooajnsbvlnovlkI7ph43mlrDojrflj5bmlbDmja4KICAgIH0KICB9Cn0K"},{"version":3,"sources":["daily.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAafile":"daily.vue","sourceRoot":"src/views/dashboard","sourcesContent":["<template>\n  <div>\n    <!-- 切换按钮 -->\n    <div>\n      <button :class=\"{ 'active': chartType === 'view' }\" @click=\"changeChartType('view')\">课程观看量</button>\n      <button :class=\"{ 'active': chartType === 'buy' }\" @click=\"changeChartType('buy')\">课程收藏量</button>\n    </div>\n    <!-- 图表组件 -->\n    <ve-line v-loading=\"loading\" :data=\"chartData\" :settings=\"chartSettings\" :extend=\"extend\" />\n  </div>\n</template>\n\n<script>\n// import { getCommon } from '@/api/stat'  // 假设这是你用来获取数据的 API 服务\nimport { getDaily } from '@/api/stat'\nimport { jsonObj2FormData } from '@/utils'\n\nexport default {\n  name: 'StatDaily',\n  props: {\n    startEnd: {\n      type: Array,\n      default: function () {\n        const now = new Date(new Date(new Date().toLocaleDateString()).getTime()).getTime()\n        const start = this.parseTime(now - 30 * 24 * 60 * 60 * 1000) // 默认过去30天\n        const end = this.parseTime(now)\n        return [start, end]\n      }\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      chartType: 'view',\n      chartData: {\n        columns: ['date'], // 先只设置日期列\n        rows: [],\n        series: [] // 新增系列数据\n      },\n      chartSettings: {\n        labelMap: {\n          courseBuyCount: '课程购买数量',\n          videoViewCount: '视频观看数量'\n        },\n        area: true // 设为true可以使图表为区域图（如果需要）\n      },\n      extend: {\n        legend: {\n          left: '12'\n        },\n        grid: {\n          bottom: '10'\n        },\n        xAxis: {\n          axisLabel: {\n            formatter: function (value) {\n            // 只保留日期部分\n              return value.split(' ')[0]\n            }\n          }\n        }\n      },\n      colorPalette: ['#42b983', '#ff6a00'] // 定义颜色调色板\n      // colorPalette: ['#42b983', '#ff6a00', '#409eff', '#e03c31', '#9c27b0', '#2196f3'] // 定义颜色调色板\n    }\n  },\n  watch: {\n    startEnd(val) {\n      this.getDailyStat()\n    }\n  },\n  created() {\n    this.getDailyStat()\n  },\n  methods: {\n    // 获取课程统计数据的 API 请求\n    getDailyStat() {\n      this.loading = true\n      const params = jsonObj2FormData({\n        start: this.startEnd[0],\n        end: this.startEnd[1]\n      })\n\n      getDaily(params).then(response => {\n        console.log('API 返回的数据:', response.data)\n        const courses = response.data\n\n        // 根据图表类型设置数据\n        this.chartData.columns = ['date'] // 初始化日期列\n        this.chartData.rows = [] // 清空之前的数据\n        this.chartData.series = [] // 清空之前的系列数据\n\n        // 处理数据，生成观看量和订阅量数据\n        const { viewData, buyData } = this.processCourseData(courses)\n\n        // 设置最终的图表数据\n        if (this.chartType === 'view') {\n          this.chartData.columns = ['date', ...viewData.columns]\n          this.chartData.rows = viewData.rows\n          this.chartData.series = viewData.series\n        } else if (this.chartType === 'buy') {\n          this.chartData.columns = ['date', ...buyData.columns]\n          this.chartData.rows = buyData.rows\n          this.chartData.series = buyData.series\n        }\n\n        console.log('最终的 chartData:', this.chartData)\n        this.loading = false\n      }).catch(() => {\n        this.loading = false\n      })\n    },\n\n    // 处理课程数据，分别生成观看量和订阅量数据\n    processCourseData(courses) {\n      const viewData = {\n        columns: [],\n        rows: [],\n        series: []\n      }\n      const buyData = {\n        columns: [],\n        rows: [],\n        series: []\n      }\n\n      const allDates = this.getAllDates(courses)\n\n      // 遍历所有课程\n      courses.forEach(course => {\n        const viewCourseData = []\n        const buyCourseData = []\n\n        // 遍历该课程的每日数据\n        allDates.forEach(date => {\n          const dailyStat = course.dailyStats.find(stat => stat.date === date) || { videoViewCount: 0, courseBuyCount: 0 }\n\n          // 将每天的数据填充到观看量和订阅量表格\n          viewCourseData.push(dailyStat.videoViewCount)\n          buyCourseData.push(dailyStat.courseBuyCount)\n        })\n\n        // 为观看量表添加课程数据\n        viewData.columns.push(course.courseTitle)\n        viewData.rows = this.mergeRows(viewData.rows, allDates, viewCourseData, course.courseTitle)\n        viewData.series.push({\n          name: course.courseTitle,\n          data: viewCourseData,\n          color: this.colorPalette[viewData.series.length % this.colorPalette.length]\n        })\n\n        // 为订阅量表添加课程数据\n        buyData.columns.push(course.courseTitle)\n        buyData.rows = this.mergeRows(buyData.rows, allDates, buyCourseData, course.courseTitle)\n        buyData.series.push({\n          name: course.courseTitle,\n          data: buyCourseData,\n          color: this.colorPalette[buyData.series.length % this.colorPalette.length]\n        })\n      })\n\n      return { viewData, buyData }\n    },\n\n    // 获取所有日期（从所有课程的 dailyStats 中获取）\n    getAllDates(courses) {\n      const dates = new Set()\n      courses.forEach(course => {\n        course.dailyStats.forEach(stat => {\n          dates.add(stat.date)\n        })\n      })\n      return [...dates].sort() // 按日期排序\n    },\n\n    // 合并 rows 数据\n    mergeRows(rows, dates, courseData, courseTitle) {\n      dates.forEach((date, index) => {\n        if (rows[index] === undefined) {\n          rows[index] = { date }\n        }\n        rows[index][courseTitle] = courseData[index]\n      })\n      return rows\n    },\n\n    // 时间格式化方法\n    parseTime(time) {\n      const date = new Date(time)\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`\n    },\n\n    // 切换图表类型\n    changeChartType(type) {\n      this.chartType = type\n      this.getDailyStat() // 切换图表类型后重新获取数据\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* 按钮容器 */\nbutton {\n  margin-right: 10px;\n  padding: 8px 16px;\n  /* 增大按钮的大小，方便点击 */\n  cursor: pointer;\n  border: none;\n  /* 去掉默认的边框 */\n  border-radius: 4px;\n  /* 圆角 */\n  background-color: #f1f1f1;\n  /* 默认背景颜色 */\n  color: #97a8be;\n  /* 默认字体颜色 */\n  font-size: 14px;\n  /* 设置字体大小 */\n  font-weight: 500;\n  /* 设置字体加粗 */\n  transition: all 0.3s ease;\n  /* 平滑的过渡效果 */\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  /* 增加阴影效果，提升层次感 */\n}\n\n/* 活动按钮样式 */\nbutton.active {\n  background-color: #f8f7f7;\n  /* 激活时的背景颜色，淡蓝色 */\n  color: #4b9af0;\n  /* 激活时的字体颜色，深蓝色 */\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  /* 激活时按钮的阴影效果，蓝色阴影 */\n}\n\n/* 鼠标悬停时的效果 */\nbutton:hover {\n  background-color: #e0e0e0;\n  /* 鼠标悬停时的背景色 */\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  /* 悬停时的阴影效果 */\n}\n\n/* 按钮被禁用时的样式 */\nbutton:disabled {\n  background-color: #dcdcdc;\n  /* 禁用时的背景色 */\n  color: #b0b0b0;\n  /* 禁用时的字体颜色 */\n  cursor: not-allowed;\n  /* 禁用时的鼠标样式 */\n  box-shadow: none;\n  /* 禁用时去掉阴影 */\n}\n</style>\n"]}]}